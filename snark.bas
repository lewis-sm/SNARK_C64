10 REM COPYRIGHT C ANDREW COLIN 1978
20 REM SNARK SIMULATOR FOR COMMODORE PET (C64 UPDATED)
30 REM With C64 Updates : Version 2
40 REM Using MS Code with VS64 Extension & Vice
50 REM ************************************
60 REM CP MARKS A NEED TO RECOMPILE
70 REM EF IS NUMBER OF ERRORS IN SOURCE
80 REM GH IS SET = 1 IF "END" OBEYED
90 REM SS MARKS "SINGLE-SHOT"
100 REM PC IS CONTROL COUNTER
110 REM DSP IS DISPLAY ON
120 REM *************************************
125 POKE 53280,11 : POKE 53281,0 : POKE 646,5
130 PRINT "{clr}"
140 PRINT "SNARK SIMULATOR FOR C64 v2"
150 PRINT "=========================="
160 PRINT
170 DIM C$(20) : REM COMMENT LINES
180 DIM T$(127) : REM PROGRAM LINE TEXT
190 DIM T(127) : REM PROGRAM LINE NUMNER
200 DIM M$(16) : REM INSTRUCTIONS
210 CP = 1
220 NF = 0 : REM NOT FIRST DIR RUN FLAG
230 REM **************************************
240 REM READ MNEMONICS
250 FOR J = 0 TO 15 : READ M$(J) : NEXT J
260 REM ++ ADDED THE QUOTES TO THE LINE AS THERE
270 REM ++ WERE ERRORS IN READING SOME VALUES?
280 DATA "LDA","STA","ADD","SUB","AND","ORA","JMP","BZE"
290 DATA "BNZ","BMI","BPL","LRS","NEG","INA","OUT","END"
300 REM **************************************
310 REM READ CODES TO BE IGNORED
320 FOR J = 1 TO 10 : READ C(J) : NEXT J
330 REM RVSON,RVSOFF,sRETURN,CLR,CRSRDWN,CRSRUP,CRSRL,INSR : IGNORE
340 DATA 18,146,141,19,147,17,145,29,157,148
350 REM **************************************
360 REM MAIN CONTROL POINT
370 GOSUB 1160
380 REM LC IS "LIST COMMENTS"
390 IF X$ = "LC" THEN 830
400 IF X$ = "LISTALL" THEN 930
410 REM TEST FOR "LIST A - B "
420 IF LEFT$(X$,4) = "LIST" THEN 850
430 IF X$ = "RUN" THEN 620
440 IF X$ = "WIPE" GOTO 970
450 IF X$ = "DUMP" THEN 1840
460 IF X$ = "DSAVE" THEN 3780
470 IF X$ = "DLOAD" THEN 4000
480 IF X$ = "DIRECTORY" THEN 5860
490 IF X$ = "DIR" THEN 5860
500 IF X$ = "LOAD" THEN 2010
510 IF X$ = "TRANSLATE" THEN 1020
520 IF LEFT$(X$,2) = "PM" THEN 1070
530 IF X$ = "SYSTEM" THEN 592
540 IF X$ = "HELP FUNCTIONS" THEN 4270
550 IF X$ = "HELP MODES" THEN 4550
560 IF X$ = "HELP SYNTAX" THEN 4770
570 IF X$ = "HELP" THEN 5230
580 PRINT "DIRECTIVE NOT RECOGNISABLE, SEE HELP"
590 GOTO 370
591 REM ** EXIT TO 'SYSTEM'
592 POKE 53280,14 : POKE 53281,6 : POKE 646,14
593 PRINT "{clr}{home}USE RUN 370 TO RESTART SNARK" : PRINT
594 END
600 REM ******************
610 REM RUN SEQUENCE
620 IF CP = 0 THEN 660
630 PRINT "TRANSLATION NEEDED": GOSUB 2660
640 IF EF = 0 THEN PRINT "COMPILATION CORRECT": CP = 0: GOTO 660
650 PRINT EF; "ERRORS IN TRANSLATION" : GOTO 370
660 INPUT "DISPLAY ON "; Q$ : DSP = 1 : SS = 0
670 IF LEFT$(Q$,1) = "N" THEN DSP = 0 : GOTO 700
680 INPUT "SINGLE SHOT"; Q$
690 IF LEFT$(Q$,1) = "Y" THEN SS = 1
700 INPUT "START ADDRESS"; PX
710 IF PX=(-1) THEN 740
720 PC = PX
730 IF PC < 0 OR PC > 127 THEN 700
740 GH = 0
750 GOSUB 2920
760 IF GH = 1 THEN 370
770 IF SS = 1 THEN 800
780 GET Q$: IF Q$ <> "B" THEN 750
790 GOTO 370
800 GET Q$: IF Q$="" THEN 800
810 IF Q$ = "B" THEN PRINT "{rvs on}BREAK{rvs off}" : GOTO 370
820 GOTO 750
830 GOSUB 1680 : GOTO 370
840 REM ******************
850 X$=MID$(X$,5): GOSUB 3500 : REM GET PARAMTERS FOR LIST A-B
860 IF AB = 1 THEN 890
870 GOSUB 1760
880 GOTO 370
890 PRINT "LIST PARAMETERS WRONG"
900 GOTO 370
910 REM ***********************
920 REM "LISTALL"
930 GOSUB 1680: A=0: B=127: GOSUB 1760
940 GOTO 370
950 REM ********************************
960 REM "WIPE"
970 FOR J = 0 TO 20: C$(J)="" : NEXT J
980 FOR J = 0 TO 127: T$(J)="" : NEXT J
990 GOTO 370
1000 REM *******************************
1010 REM "TRANSLATE"
1020 GOSUB 2660
1030 IF EF = 0 THEN PRINT "COMPILATION CORRECT": CP=0: GOTO 370
1040 PRINT EF;" ERRORS" : GOTO 370
1050 REM ************************
1060 REM "PM"
1070 X$ = MID$(X$,3) : GOSUB 3500
1080 IF AB = 1 THEN 1110
1090 GOSUB 3620
1100 GOTO 370
1110 PRINT "POST-MORTEM PARAMETERS WRONG"
1120 GOTO 370
1130 REM ******************
1140 REM READ SOURCE FROM KEYBOARD
1150 REM POKE TURNS OFF '?' FOR INPUT
1160 POKE 19,65
1170 REM ADDING CODE TO GET A FLASHING PROMPT FOR INPUT
1180 PRINT "{green}> ";: X$ = ""
1190 REM POKE AND CODE BELOW KEEPS A FLASHING CURSOR FOR GET
1200 REM SET FLASH CURSOR - GET #KEYB CHARS
1210 POKE 204,0 : IF PEEK(198) = 0 THEN 1210
1220 REM FLASH CURSOR OFF:GET FLAG FOR CURSOR BLINK (ON/OFF) IF OFF GET NEW CHAR
1230 POKE 204,1 : IF PEEK(207) = 0 THEN 1290 :
1240 REM GET SCR LINE, COLUMN AND PLACE THE CHAR AT X,Y ON SCR
1250 POKE 207,0 : POKE(PEEK(210)*256+PEEK(209)+PEEK(211)),PEEK(206)
1260 REM COLOR RAM LOCAL AND COLOR - BACKGROUND COLOR
1270 POKE (PEEK(244)*256+PEEK(243)+PEEK(211)),PEEK(647)
1280 REM END OF CODE TO MANAGE FLASHING CURSOR
1290 GET Y$ : IF Y$ = "" THEN 1290
1300 REM POKE TURNs '?' BACK ON
1310 POKE 19,0
1320 K = ASC(Y$)
1330 REM CHECK IF KEY IS TO BE IGNORED
1340 FOR J = 1 TO 10
1350 IF K = C(J) THEN 1290 : REM IF MATCHED IGNORE
1360 NEXT J
1370 IF K <> 20 THEN 1410
1380 REM HANDLE DELETE (20) KEY
1390 IF X$ = "" THEN 1210
1400 X$ = MID$(X$,1,LEN(X$)-1) : PRINT "{cursor left} {cursor left}"; : GOTO 1210
1410 PRINT Y$; : IF K = 13 THEN 1440
1420 REM BELOW NOW POINTS TO FLASHING CURSOR CODE
1430 X$ = X$ + Y$: GOTO 1210
1440 IF X$= "" THEN 1180
1450 IF LEFT$(X$,1) <> "C" THEN 1520
1460 Z = VAL(MID$(X$,2))
1470 IF Z >=0 AND Z <= 20 THEN 1500
1480 PRINT "WRONG COMMENT NUMBER. MUST BE IN RANGE 1-20"
1490 GOTO 1160
1500 C$(Z) = X$
1510 GOTO 1160
1520 Z$ = LEFT$(X$,1)
1530 IF ASC(Z$) > 57 OR ASC(Z$) < 48 THEN 1650
1540 Z=VAL(X$)
1550 IF Z >= 0 AND Z <= 127 THEN 1590
1560 PRINT "WRONG DESTINATION ADDRESS"
1570 PRINT "RANGE IS 0 TO 127"
1580 GOTO 1160
1590 X$ = MID$(X$,2,LEN(X$)-1)
1600 IF X$= "" THEN 1630
1610 IF LEFT$(X$,1) = " " THEN 1590
1620 IF ASC(X$) <=57 AND ASC(X$) >= 48 THEN 1590
1630 T$(Z) = X$ : CP = 1
1640 GOTO 1160
1650 RETURN
1660 REM ******************
1670 REM LIST COMMMENTS
1680 FOR J = 1 TO 20
1690 IF C$(J)="" THEN 1710
1700 PRINT C$(J)
1710 NEXT J
1720 PRINT
1730 RETURN
1740 REM ********************
1750 REM LIST SOURCE TEXT
1760 FOR J=A TO B
1770 IF T$(J)="" THEN 1790
1780 PRINT J; T$(J)
1790 NEXT J
1800 PRINT
1810 RETURN
1820 REM **********************
1830 REM "DUMP"
1840 GOSUB 2200
1850 OPEN 1,1,1
1860 FOR J = 1 TO 20
1870 IF C$(J)="" THEN 1900
1880 PRINT# 1,C$(J)
1890 GOTO 1910
1900 PRINT# 1,"X"
1910 NEXT J
1920 FOR J=0 TO 127
1930 IF T$(J)="" THEN 1950
1940 PRINT# 1,T$(J):GOTO 1960
1950 PRINT# 1,"X"
1960 NEXT J
1970 CLOSE 1
1980 GOTO 370
1990 REM **************
2000 REM "LOAD"
2010 GOSUB 2200
2020 OPEN 1
2030 CP=l
2040 FOR J = 1 TO 20
2050 INPUT# 1,C$(J)
2060 IF C$(J) = "X" THEN 2080
2070 PRINT C$(J): GOTO 2150
2080 C$(J)=""
2090 NEXT
2100 FOR J= 0 TO 127
2110 INPUT# 1,T$(J)
2120 IF T$(J)="X" THEN 2140
2130 PRINT J;T$(J): GOTO 2150
2140 T$(J)=""
2150 NEXT
2160 CLOSE 1
2170 GOTO 370
2180 REM *******************
2190 REM OPEN CASSETTE FOR READING OR WRITING
2200 PRINT "REWIND TAPE AND PRESS A KEY"
2210 GET X$: IF X$="" THEN 2210
2220 RETURN
2230 REM *******************
2240 REM COLLAPSE X$ INTO Y$
2250 Y$ = ""
2260 FOR J = 1 TO LEN(X$)
2270 Z$=MID$(X$,J,1)
2280 IF ASC(Z$) = 94 THEN RETURN : REM UPARROW IS 'REM'
2290 IF Z$ = " " THEN 2310
2300 Y$ = Y$ + Z$
2310 NEXT
2320 RETURN
2330 REM *************************
2340 REM DECODE INSTRUCTION IN Y$
2350 E%=0: M%=0: D%=0
2360 IF LEN(Y$) < 3 THEN E% = 1 : RETURN
2370 FOR J = 0 TO 15
2380 IF LEFT$(Y$,3) = M$(J) THEN 2410
2390 NEXT J
2400 E% = 2 : RETURN
2410 F% = J
2420 Y$ = MID$(Y$,4)
2430 A% = 0
2440 IF J >= 11 AND LEN(Y$) = 0 THEN RETURN
2450 IF J <= 10 THEN 2490
2460 IF LEFT$(Y$,1) = "A" THEN RETURN
2470 IF LEFT$(Y$,1) <> "B" THEN E% = 3: RETURN
2480 A% = 1 : RETURN
2490 REM ADDRESSED INSTRUCTION
2500 IF LEN(Y$) = 0 THEN E% = 4 : RETURN
2510 IF LEFT$(Y$,1) = "A" THEN 2540
2520 IF LEFT$(Y$,1) <> "B" THEN 2560
2530 A% = 1
2540 Y$ = MID$(Y$,2)
2550 IF LEN(Y$) = 0 THEN E% = 4 : RETURN
2560 M% = 0
2570 IF LEFT$(Y$,1) <> "#" THEN 2600
2580 M% = 0
2590 Y$ = MID$(Y$,2)
2600 D% = ASC(Y$)
2610 IF D% < 48 OR D% > 57 THEN E% = 4 :RETURN
2620 D% = VAL(Y$)
2630 IF RIGHT$(Y$,1)="A" THEN M%=2
2640 IF RIGHT$(Y$,1)="B" THEN M%=3
2650 RETURN
2660 REM INSTRUCTION TRANSLATOR
2670 EF = 0
2680 FOR H = 0 TO 127
2690 IF T$(H) = "" THEN 2890
2700 X$ = T$(H) : GOSUB 2240
2710 IF ASC (Y$) = 43 OR ASC(Y$) = 45 THEN 2860
2720 GOSUB 2340
2730 IF E% <> 0 THEN 2770
2740 T(H) = D% + 512 * M% + 2048 * A% + 4096 * F%
2750 IF T(H) > 32767 THEN T(H) = T(H) - 65536
2760 GOTO 2890
2770 EF = EF + 1
2780 PRINT "ERROR IN LINE";H
2790 PRINT H;T$(H)
2800 IF E% = 1 THEN PRINT "TOO SHORT" :PRINT
2810 IF E% = 2 THEN PRINT "UNKNOWN MNEMONIC": PRINT
2820 IF E% = 3 THEN PRINT "WRONG ACC DESIGNATION": PRINT
2830 IF E% = 4 THEN PRINT "ADDRESS PART MISSING": PRINT
2840 IF E% = 5 THEN PRINT "ADDRESS OR VALUE TO LARGE": PRINT
2850 GOTO 2890
2860 T = VAL(Y$)
2870 IF ABS(T) > 32767 THEN E% = 5: GOTO 2770
2880 T(H) = T
2890 NEXT H
2900 RETURN
2910 REM *****************
2920 REM EXECUTE A SINGLE INSTRUCTION CYCLE
2930 IR = T(PC) : PC = PC + 1
2940 D = IR AND 511 : M%=(IR AND 1536) / 512
2950 A% = IR AND 2048 : F = INT(IR/4096)
2960 IF F < 0 THEN F = F + 16
2970 IF DSP = 0 THEN 3050
2980 PRINT PC - 1; M$(F); : IF A% > 0 THEN PRINT " b "; : GOTO 3000
2990 PRINT " A ";
3000 IF F > 10 THEN PRINT "     "; : GOTO 3040
3010 IF M% = 0 THEN PRINT "#";
3020 PRINT D; : IF M% = 2 THEN PRINT "A";
3030 IF M% = 3 THEN PRINT "B";
3040 PRINT "    ",
3050 CA = A0 : IF A% = 2048 THEN CA = A1
3060 IF F > 7 THEN 3080
3070 ON F + 1 GOTO 3100,3090,3110,3120,3130,3140,3150,3160
3080 ON F - 7 GOTO 3180,3200,3220,3240,3250,3260,3270,3280
3090 GOSUB 3380: T(D) = CA: GOTO 3330
3100 GOSUB 3440: CA = D : GOTO 3290
3110 GOSUB 3440: CA = CA+D : GOTO 3290
3120 GOSUB 3440: CA = CA-D : GOTO 3290
3130 GOSUB 3440: CA = CA AND D : GOTO 3290
3140 GOSUB 3440: CA = CA OR D : GOTO 3290
3150 GOSUB 3380: PC = D : GOTO 3330
3160 GOSUB 3380: IF CA = 0 THEN PC = D
3170 GOTO 3330
3180 GOSUB 3380: IF CA <> 0 THEN PC = D
3190 GOTO 3330
3200 GOSUB 3380: IF CA < 0 THEN PC = D
3210 GOTO 3330
3220 GOSUB 3380: IF CA >= 0 THEN PC = D
3230 GOTO 3330
3240 CA = INT(CA*0.5) : GOTO 3290
3250 CA = -CA: GOTO 3290
3260 INPUT CA: GOTO 3290
3270 PRINT "OUTPUT IS ";CA : RETURN
3280 GH = 1 : GOTO 3330
3290 IF CA > 32767 THEN CA = CA - 65536 : GOTO 3290
3300 IF CA < -32768 THEN CA = CA + 65536 : GOTO 3300
3310 IF A% = 0 THEN A0 = CA : GOTO 3330
3320 A1 = CA
3330 IF DSP = 0 THEN RETURN
3340 PRINT "A=";A0,"B=";A1
3350 RETURN
3360 REM *************************
3370 REM GET ADDRESS OF OPERAND
3380 IF M% = 2 THEN D = D + A0
3390 IF M% = 3 THEN D = D + A1
3400 IF D >= 0 AND D < 128 THEN RETURN
3410 PRINT "ADDRESS VIOLATION IN LINE"; PC - 1 : D = 127 : GH = 1 : RETURN
3420 REM *****************
3430 REM GET OPERAND
3440 IF M% = 2 THEN D = D + A0
3450 IF M% = 3 THEN D = D + A1
3460 IF M% = 0 THEN RETURN
3470 IF D >= 0 AND D < 128 THEN D = T(D) : RETURN
3480 GOTO 3410
3490 REM *****************
3500 REM GET PARAMETERS FOR LIST OR PM
3510 Y$ = X$: AB = 1
3520 IF Y$ = "" THEN RETURN
3530 Y$ = MID$(Y$,2)
3540 IF Y$ = "" THEN RETURN
3550 IF ASC(Y$) <> 45 THEN 3520
3560 Y$ = MID$(Y$,2)
3570 A = VAL(X$): B = VAL(Y$): IF A < 0 OR A > 127 THEN RETURN
3580 IF B < 0 OR B > 127 THEN RETURN
3590 IF B < A THEN RETURN
3600 AB = 0 : RETURN
3610 REM *****************
3620 REM INSTRUCTION CODE AND LISTING
3630 FOR J = A TO B
3640 PRINT J; :IR = T(J) : D% = IR AND 511
3650 M% = (IR AND 1536)/512: A% = IR AND 2048
3660 F% = IR/4096
3670 IF F% < 0 THEN F% + 16
3680 PRINT M$(F%)
3690 IF A% > 0 THEN PRINT " B "; : GOTO 3710
3700 PRINT " A";
3710 IF F% > 10 THEN PRINT "  "; : GOTO 3750
3720 IF M% = 0 THEN PRINT "#";
3730 PRINT D%; : IF M% = 2 THEN PRINT "A";
3740 IF M% = 3 THEN PRINT "B";
3750 PRINT " "; IR
3760 NEXT J
3770 RETURN
3780 REM **********************
3790 REM "DSAVE"
3800 PRINT "SAVING TO DISK"
3810 INPUT "ENTER FILE NAME: "; F$
3820 F$ = F$ + ".SA" + ",SEQ,W"
3830 IF F$ = "" GOTO 3970
3840 OPEN 1,8,4,F$
3850 FOR J = 1 TO 20
3860 IF C$(J) = "" THEN 3890
3870 PRINT# 1,C$(J)
3880 GOTO 3900
3890 PRINT# 1,"X"
3900 NEXT J
3910 FOR J = 0 TO 127
3920 IF T$(J) = "" THEN 3940
3930 PRINT# 1,T$(J) : GOTO 3950
3940 PRINT# 1,"X"
3950 NEXT J
3960 CLOSE 1
3970 GOTO 370
3980 REM **************
3990 REM "DLOAD"
4000 PRINT "LOAD FROM DISK"
4010 F$ = "" : INPUT "ENTER FILE NAME: "; F$
4020 IF LEN(F$) = 0 GOTO 4260
4030 IF RIGHT$(F$,3) <> ".SA" THEN F$=F$+".SA"
4040 EN=0:EM$="":ET=0:ES=0
4050 OPEN 15,8,15,"R0:"+F$+"="+F$ : INPUT# 15,EN,EM$,ET,ES : CLOSE 15
4060 IF EN = 63 THEN 4090 : REM FILE EXISTS
4070 PRINT F$; EN; EM$
4080 GOTO 4010
4090 F$ = F$ + ",SEQ,R" : OPEN 1,8,4,F$
4100 CP = 1
4110 FOR J = 1 TO 20
4120 INPUT# 1,C$(J)
4130 IF C$(J) = "X" THEN 4150
4140 PRINT "C"+STR$(J);C$(J) : GOTO 4160
4150 C$(J) = ""
4160 NEXT J
4170 FOR J = 0 TO 127
4180 INPUT# 1,T$(J)
4190 IF T$(J) = "X" THEN 4210
4200 PRINT J;T$(J) : GOTO 4220
4210 T$(J) = ""
4220 NEXT J
4230 CLOSE 1
4240 DEF FN FR(X)=FRE(0)-65536*(FRE(0)<0)
4250 PRINT FN FR(0);"BYTES FREE"
4260 GOTO 370
4270 REM ******** HELP ****
4271 REM {black}, {blk}, {white}, {wht}, {red}, {cyan}
4272 REM {cyn}, {purple}, {pur}, {green}, {grn}, {blue}
4273 REM {blu}, {yellow}, {yel}, {orange}, {brown}
4274 REM {pink}, {light-red}, {gray1}, {darkgrey}
4275 REM {grey}, {lightgreen}, {lightblue}, {grey3}
4276 REM {lightgrey}, {rvs on}, {rvs off}
4280 REM   "1234567890123456789012345678901234567890"
4290 PRINT "{clr}{lightgreen}{rvs on}FUNCTIONS AVAILABLE{rvs off}" : PRINT
4291 POKE 53272,23 : REM switch to lowercase mode
4300 PRINT "LDA - Load operand to accumulator"
4310 PRINT "STA - Store contents of accumulator"
4320 PRINT "ADD - Add operand to accumulator"
4330 PRINT "SUB - Subtract operand from accumulator"
4340 PRINT "AND - Logical 'AND' operand with"
4350 PRINT "       accumulator"
4360 PRINT "ORA - Logical 'OR' operand with"
4370 PRINT "       accumulator"
4380 PRINT "JMP - Jump unconditionally to stated"
4390 PRINT "       address"
4400 PRINT "BZE - Jump if selected accumulator = 0"
4410 PRINT "BNZ - Jump if selected accumulator # 0"
4420 PRINT "BMI - Jump if selected accumulator < 0"
4430 PRINT "BPL - Jump if selected accumulator >=0"
4440 PRINT "LRS - Shift accumulator one place right"
4450 PRINT "       logically"
4460 PRINT "NEG - Negate accumulator"
4470 PRINT "INA - Input a number from the keyboard"
4480 PRINT "       and put in selected accumulator"
4490 PRINT "OUT - Print the number in the selected"
4500 PRINT "       accumulator, on a line by itself"
4510 PRINT "END - Stop the program"
4520 GOSUB 5282
4530 GOTO 370
4540 REM   "1234567890123456789012345678901234567890"
4550 PRINT "{clr}{lightgreen}{rvs on}MODES{rvs off}" : PRINT
4560 PRINT "00 : Immediate mode.  The address part"
4570 PRINT "      if taken by the operand"
4580 PRINT "01 : Direct mode. The operand is taken"
4590 PRINT "      from the store location specified"
4600 PRINT "      by the address"
4610 PRINT "10 : Indexed by accumulator A.  The"
4620 PRINT "      operand is taken from the cell"
4630 PRINT "      pointed to by the sum of the"
4640 PRINT "      address part and the current"
4650 PRINT "      contents of the accumulator A"
4660 PRINT "11 : Index by accumulator B. The"
4670 PRINT "      description is similar to the one"
4680 PRINT "      above, except that accumulator B"
4690 PRINT "      is used to calculate the address"
4700 PRINT
4710 PRINT "Note that STA and the jmp instructions"
4720 PRINT "do not allow the immediate mode."
4730 PRINT
4740 GOSUB 5282
4750 GOTO 370
4760 REM   "1234567890123456789012345678901234567890"
4770 PRINT "{clr}{lightgreen}{rvs on}" : PRINT
4775 PRINT "SNARK programs are entered from the"
4780 PRINT "keyboard using the following syntax{rvs off}"
4785 PRINT
4790 PRINT "  <CR>     ::= 'return' key"
4800 PRINT "  <digit>  ::= 0|1|2|3|4|5|6|7|8|9"
4810 PRINT "  <number> ::= (digit)l(number)(digit)"
4820 PRINT "                e.g.: 5, 47, 123"
4830 PRINT " <address> ::= <number> | #<number> |"
4840 PRINT "                <number>A | <number>B"
4850 PRINT "                e.g. : 14, #D, 51A, 47B"
4855 PRINT ""
4860 PRINT "These examples illustrate the direct,"
4870 PRINT "immediate, index A and indexB modes"
4880 PRINT "respectively." : PRINT
4890 PRINT "     <acc> ::= A/B/(empty)"
4900 PRINT "               e.g. A, B"
4905 PRINT ""
4910 PRINT "If <acc> = <empty>, then A is implied"
4920 PRINT "by default" : PRINT
4930 PRINT "PRESS A KEY" : GET K$ : IF K$ = "" THEN 4930
4940 PRINT "{clr}Syntax (2)" : PRINT
4950 PRINT "  <addressed function> ::= LDA|STA|"
4960 PRINT "  ADD|SUB|ORA|AND|JMP|BZE|BNZ|BMI|"
4970 PRINT "  BPL" : PRINT
4980 PRINT "  <addressless function> ::= LRS|"
4990 PRINT "  NEG|INA|OUT|END" : PRINT
5000 PRINT "  <item> ::= +<number> | -<number> |"
5010 PRINT "    <addressless function><acc> |"
5020 PRINT "    <addressed function><acc><address>"
5030 PRINT "    e.g.: +4, -15, NEG B, LDA A 74A"
5040 PRINT "PRESS A KEY" : GET K$ : IF K$ = "" THEN 5040
5050 PRINT "{clr}Syntax (3)" : PRINT
5060 PRINT "<comment> ::= <followed by a sequence of"
5070 PRINT "               any characters> | <empty>"
5080 PRINT "<return> ::= <comment><CR>"
5090 PRINT "<labelled item> ::= <number><item>"
5100 PRINT "                  <return>"
5110 PRINT "        e.g.: 0 +44"
5120 PRINT "              1 -I23 MINUS ONE TWO THREE"
5130 PRINT "             46 ADD B #7"
5140 PRINT "<c line> ::= C<number><followed by a"
5150 PRINT "         sequence of any character><CR>"
5160 PRINT "<preamble> ::= <preamble><c line>|"
5170 PRINT "          empty>"
5180 PRINT "<text> ::= <labelled item> | <text>"
5190 PRINT "          labelled item>"
5200 PRINT "<program> ::= <preamble><text>"
5210 PRINT "PRESS A KEY" : GET K$ : IF K$ = "" THEN 5210
5220 GOTO 370
5230 PRINT : PRINT "ENTER HELP <xxxxx> FOR INFORMATION"
5240 PRINT : PRINT "HELP SYNTAX"
5250 PRINT : PRINT "HELP FUNCTIONS"
5260 PRINT : PRINT "HELP MODES"
5270 PRINT
5280 GOTO 370
5281 REM HELP PRESS A KEY SUB
5282 PRINT SPC(28) "{light-red}{rvs on}PRESS A KEY{rvs off}"
5283 GET K$ : IF K$ = "" THEN 5283
5284 POKE 53272,21 : REM switch back to uppercase mode
5285 PRINT "{clear}{home}"
5286 RETURN
4530 GOTO 370
5290 REM   "1234567890123456789012345678901234567890"
5300 PRINT "{clr}{lightgreen}{rvs on}SNARK commands (1){rvs off}": PRINT
5310 PRINT "DUMP - Writes program and comment lines"
5320 PRINT " to tape."
5330 PRINT "DSAVE - Writes program and comment lines"
5340 PRINT " to disk (#8)"
5350 PRINT "LOAD - Reads a SNARK program back from"
5360 PRINT " tape, As it is read the program is"
5370 PRINT " listed."
5380 PRINT "DLOAD - Reads a SNARK program back from"
5390 PRINT " disk (#8), as it is read the"
5400 PRINT " program is listed. also WIPE."
5410 PRINT "WIPE - All comment and program lines"
5420 PRINT " are deleted"
5430 PRINT "LISTALL - All comments and program lines"
5440 PRINT " are displayed"
5450 PRINT "LC - All comment lines are displayed"
5470 PRINT "LIST n-m - n and m are integers in the"
5480 PRINT " range 0 to 127.  Program"
5490 PRINT " lines n to m are listed"
5500 PRINT "RUN - Program is transalated"
5510 PRINT " from source to binary and run"
5520 PRINT " Details of the run are "
5530 PRINT " electited by a brief dialogue"
5541 PRINT "DIRECTORY/DIR - Will list all of the"
5542 PRINT " SNARK programs (.SA) saved to drive 8"
5550 PRINT "(a) DISPLAY ON? If the reply is YES or Y"
5560 PRINT "   then each instruction and its results"
5570 PRINT "   are displayed as each instruction is"
5580 PRINT "   obeyed"
5590 PRINT "(b) SINGLE SHOT? if the reply is YES or"
5600 PRINT "   Y the program is executed one line"
5610 PRINT "   at a time.  Each instruction is"
5620 PRINT "   initiated by pressing any key"
5630 PRINT "   accept B (for break)"
5640 PRINT "(c) START ADDRESS? The reply (an integer)"
5650 PRINT "   indicates the address at which the"
5660 PRINT "   program should start"
5670 REM *** SOME SPACE
5680 PRINT "TRANSLATE - Forces the transalation"
5690 PRINT    "process.  It is useful in times"
5700 PRINT "   where a new translation is needed"
5710 PRINT "   but whould have been ommitted by"
5720 PRINT "   using the RUN command.  For example"
5730 PRINT "   runnin a self-modifying program"
5740 PRINT "PM m-n This command generates a post-"
5750 PRINT "mortem dump of registers m-n.  Each"
5760 PRINT "cell is displayed as (a) instruction"
5770 PRINT "and (b) as a decimal number"
5775 PRINT "Press a Key" : GET K$
5780 REM NOTES
5790 REM OPEN 5,0: INPUT# 5, A$: CLOSE 5
5800 REM <- This allows user to input using keyboard instead of input
5810 REM and does not display the '?'
5820 REM OR .. POKE 19,65 (OFF) POKE 19,0 ON
5830 REM *****************
5840 REM GET DISK DIRECTORY
5850 REM FI$, DT%, BL%, FT$-FILE TYPES
5860 IF NF% > 0 THEN 5900 REM IF NOT FIRST DIR COMMAND
5870 DIM FI$(40),T%(40),BL%(40),FT$(4)
5880 FOR N = 0 TO 4:READ FT$(N):NEXT
5890 PRINT
5900 BF = 664 : REM ** BLOCKS FREE ********
5910 D$ = "" : REM CLEAR DISK NAME
5920 OPEN 15,8,15,"I0:" : CLOSE 15 : REM INITIALIZE DISK
5930 OPEN 2,8,2,"$" : REM OPEN DIR AS LOGICAL FILE
5940 REM ** NOT NEEDED FOR DIRECTORY **
5950 REM ** 4040 FORMAT, FUTURE DOS, BAM
5960 FOR N = 2 TO 143 : GET# 2,A$ : NEXT N
5970 REM ** GET THE DISK NAME *********
5980 FOR N = 144 TO 161
5990 REM D$ IS DISK NAME, SHIFT SPACE IS PAD (PETSCI 160)
6000 GET# 2,A$ : IF A$ <> CHR$(160) THEN D$ = D$ +A$
6010 NEXT N
6020 PRINT SPC(4); CHR$(18); D$; SPC(17-LEN(D$));
6030 REM ** GET THE DISK ID ***********
6040 GET# 2,A$:PRINTA$;
6050 GET# 2,B$:PRINTB$;" ";
6060 ID$ = A$ + B$
6070 GET# 2,A$
6080 REM ** GET THE DOS VERSION *******
6090 GET# 2,A$:PRINTA$;
6100 GET# 2,B$:PRINTB$
6110 OS$ = A$+B$
6120 REM ** LOTS OF UNUSED DATA *******
6130 REM ** 2 SHIFTED SPACE AND REST NULLS
6140 FOR N = 167 TO 255:GET# 2,A$: NEXT N
6150 PRINT
6160 REM ** GET THE FILE TYPE *********
6170 REM ** 0 TO 4 PLUS 128 FOR GOOD FILE
6180 E$ = ""
6190 GET# 2,A$:IF A$= "" THEN T=0:GOTO 6230
6200 T = ASC(A$)
6210 REM ** DON'T NEED THESE 2 BYTES **
6220 REM ** TRACK & SECTOR
6230 GET# 2,A$,A$
6240 REM ** NOW GET FILE NAME *********
6250 F$=""
6260 FOR N = 3 TO 18
6270 GET# 2,A$:IF A$ <> CHR$(160) THEN F$=F$+A$
6280 NEXT N
6290 REM ** DON'T NEED THESE BYTES ****
6300 REM ** RELATIVE FILE INFO
6310 FOR N = 19 TO 27:GET# 2,A$:NEXT N
6320 REM ** GET LO/HI BLOCKS USED *****
6330 GET# 2,A$:IF A$="" THEN L=0:GOTO6350
6340 L = ASC(A$)
6350 GET# 2,A$:IF A$="" THEN H=0:GOTO6370
6360 H = ASC(A$)
6370 BL = L+(H*256)
6380 REM ** IF DEL FILE SKIP PRINT ****
6390 IF T=0 THEN 6550
6400 REM REDUCE FREE BLOCKS BY FILE SIZE
6410 BF = BF - BL
6420 REM MOVE VALUES INTO ARRAY
6430 REM BLOCKS, FILE TYPE, FILE NAMES
6440 REM SKIP IF NOT A .SA FILE!
6450 REM IF RIGHT$(F$,3) <> ".SA" THEN 9770
6460 BL%(FI) = BL: T%(FI) = T: FI$(FI) = F$: FI = FI+1
6470 IF BL < 10 THEN PRINT" ";
6480 PRINT BL;
6490 PRINT F$;SPC(17-LEN(F$));
6500 IF T > 127 THEN PRINT FT$(T-128):GOTO 6530
6510 REM * MARKS A BAD FILE
6520 PRINT "*"FT$(T)
6530 REM ** FILENAMES SAVED IN BLOCKS *
6540 REM ** OF 8. PADDING CHANGES *****
6550 IF FE < 7 THEN FE=FE+1:GET# 2,A$,A$:GOTO 6570
6560 FE = 0
6570 IF ST THEN 6590
6580 GOTO 6190
6590 CLOSE 2
6600 PRINT,, : PRINT
6610 PRINT BF " BLOCKS FREE / ";
6620 PRINT INT((BF*254)/1024) " KB FREE":REM ONLY 254 BYTE/BLOCK
6630 NF% = 1 : REM SET NOT FIRST RUN FLAG
6640 GOTO 370
6650 DATA "DEL","SEQ","PRG","USR","REL"
